{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/clients/clients.component.html","webpack:///./src/app/components/clients/clients.component.ts","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/services/client.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<navbar></navbar>\\n<div class=\\\"container\\\">\\n  <clients></clients>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {ClientsComponent} from './components/clients/clients.component';\nimport { AppComponent } from './app.component';\nimport {NavbarComponent} from './components/navbar/navbar.component';\nimport { ClientService } from './services/client.service';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\n@NgModule({\n  declarations: [\n    AppComponent,\n    ClientsComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [ClientService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"client-form\\\">\\n    <div *ngIf=\\\"isEdit\\\">\\n        <form (submit)=\\\"onEditSubmit()\\\" class=\\\"well\\\">\\n            <h3>Edit Client</h3>\\n            <div class=\\\"form-group\\\">\\n                <label>First Name</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"first_name\\\" name=\\\"first_name\\\" placeholder=\\\"First Name\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label>Last Name</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"last_name\\\" name=\\\"last_name\\\" placeholder=\\\"Last Name\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label>Email</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Email\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label>Phone Number</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"phone\\\" name=\\\"phone\\\" placeholder=\\\"Phone Number\\\">\\n            </div>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n        </form>\\n    </div>\\n\\n    <div *ngIf=\\\"!isEdit\\\">\\n        <form (submit)=\\\"onAddSubmit()\\\" class=\\\"well\\\">\\n            <h3>Add Client</h3>\\n            <div class=\\\"form-group\\\">\\n                <label>First Name</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"first_name\\\" name=\\\"first_name\\\" placeholder=\\\"First Name\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label>Last Name</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"last_name\\\" name=\\\"last_name\\\" placeholder=\\\"Last Name\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label>Email</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Email\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label>Phone Number</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"phone\\\" name=\\\"phone\\\" placeholder=\\\"Phone Number\\\">\\n            </div>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n        </form>\\n    </div>\\n</div>\\n<div class=\\\"client-list\\\">\\n    <table class=\\\"table table-striped\\\">\\n        <tr>\\n            <th>First Name</th>\\n            <th>Last Name</th>\\n            <th>Email</th>\\n            <th>Phone</th>\\n            <th></th>\\n        </tr>\\n        <tr *ngFor=\\\"let client of clients\\\">\\n            <td>{{client.first_name}}</td>\\n            <td>{{client.last_name}}</td>\\n            <td>{{client.email}}</td>\\n            <td>{{client.phone}}</td>\\n            <td><a (click)=\\\"onEditClick(client)\\\" href=\\\"#\\\" class=\\\"btn btn-default\\\">Edit</a> <a href=\\\"\\\" class=\\\"btn btn-danger\\\">Delete</a></td>\\n        </tr>\\n    </table>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {ClientService} from '../../services/client.service';\n\n@Component({\n  selector: 'clients',\n  templateUrl: './clients.component.html'\n})\nexport class ClientsComponent implements OnInit{\n  clients;\n  _id;\n  first_name;\n  last_name;\n  email;\n  phone;\n  isEdit;\n  constructor(private clientService: ClientService){\n  \n  }\n\n ngOnInit(){\n   this.clientService.getClients().subscribe(clients => {\n     this.clients = clients;\n   });\n\n   this.isEdit = false;\n }\n\n onAddSubmit(){\n   let newClient = {\n     first_name: this.first_name,\n     last_name: this.last_name,\n     email: this.email,\n     phone: this.phone\n   }\n\n   this.clientService.saveClient(newClient).subscribe(client => {\n     this.clients.push(client);\n     this.first_name = '';\n     this.last_name = '';\n     this.email = '';\n     this.phone = '';\n   });\n }\n\n onEditSubmit(){\n   let updClient = {\n     first_name: this.first_name,\n     last_name: this.last_name,\n     email: this.email,\n     phone: this.phone,\n     _id: this._id\n   }\n\n   this.clientService.updateClient(updClient).subscribe(client => {\n     for(let i = 0; i < this.clients.length;i++){\n       if(client._id == this.clients[i]._id){\n         this.clients.splice(i, 1);\n       }\n     }\n     this.clients.push(client);\n     this.first_name = '';\n     this.last_name = '';\n     this.email = '';\n     this.phone = '';\n   });\n }\n\n onEditClick(client){\n   this.isEdit = true;\n   this.first_name = client.first_name;\n   this.last_name = client.last_name;\n   this.email = client.email;\n   this.phone = client.phone;\n   this._id = client._id;\n }\n}","module.exports = \"<nav class=\\\"navbar navbar-inverse\\\">\\n\\t<div class=\\\"container\\\">\\n\\t\\t<div class=\\\"navbar-header\\\">\\n\\t\\t\\t<a href=\\\"navbar-brand\\\" href=\\\"/\\\">Clientskeeper</a>\\n\\t\\t</div>\\n\\t</div>\\n</nav>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'navbar',\n  templateUrl: './navbar.component.html'\n})\nexport class NavbarComponent {\n  constructor(){\n\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Http, Headers} from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class ClientService{\n    constructor(private http: Http){\n\n    }\n\n    getClients(){\n        return this.http.get('http://localhost:3000/api/clients')\n            .map(res => res.json());\n    }\n\n    saveClient(client){\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        return this.http.post('http://localhost:3000/api/clients', client, {headers: headers})\n            .map(res => res.json());\n    }\n\n    updateClient(client){\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        return this.http.put('http://localhost:3000/api/clients/'+client._id, client, {headers: headers})\n            .map(res => res.json());\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}